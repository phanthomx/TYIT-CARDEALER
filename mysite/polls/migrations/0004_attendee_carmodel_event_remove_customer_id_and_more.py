# Generated by Django 5.0.2 on 2024-02-24 09:26

import cloudinary.models
import cloudinary_storage.storage
import cloudinary_storage.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("polls", "0003_alter_appointment_token"),
    ]

    operations = [
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=15)),
                ("event", models.CharField(max_length=200)),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CarModel",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("min_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("mileage", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "coverpic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                ("event_name", models.CharField(max_length=200)),
                ("date_time", models.DateTimeField()),
                ("event_description", models.CharField(max_length=500)),
                ("event_total_attendees", models.IntegerField(blank=True, null=True)),
                (
                    "media_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_2",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_3",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_4",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_5",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_6",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_7",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_8",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "video_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="video"
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(),
                        upload_to="tests-videos/",
                        validators=[cloudinary_storage.validators.validate_video],
                    ),
                ),
            ],
        ),
        migrations.RemoveField(
            model_name="customer",
            name="id",
        ),
        migrations.RemoveField(
            model_name="employee",
            name="id",
        ),
        migrations.AlterField(
            model_name="customer",
            name="Email",
            field=models.CharField(
                max_length=50, primary_key=True, serialize=False, unique=True
            ),
        ),
        migrations.AlterField(
            model_name="employee",
            name="Empemail",
            field=models.CharField(
                max_length=50, primary_key=True, serialize=False, unique=True
            ),
        ),
        migrations.CreateModel(
            name="carinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("car_desc", models.TextField(blank=True)),
                ("car_type", models.CharField(max_length=100)),
                (
                    "owning",
                    models.CharField(
                        choices=[
                            ("first_hand", "First Hand"),
                            ("second_hand", "Second Hand"),
                            ("limited_edition", "Limited Edition"),
                        ],
                        max_length=100,
                    ),
                ),
                ("units", models.IntegerField(blank=True, null=True)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryVid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_1",
                    models.FileField(
                        blank=True,
                        storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(),
                        upload_to="tests-videos/",
                        validators=[cloudinary_storage.validators.validate_video],
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryInte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Interior",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryExt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Exterior",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="carFuel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Fuel_type",
                    models.CharField(
                        choices=[
                            ("petrol", "Petrol"),
                            ("diesel", "Diesel"),
                            ("hybrid", "Hybrid"),
                            ("electric", "Electric"),
                            ("cng", "CNG"),
                        ],
                        max_length=100,
                    ),
                ),
                ("Fuel_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "colorpic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                ("colorname", models.CharField(max_length=100)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarTech",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Tech_pic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                ("Tech_name", models.CharField(max_length=100)),
                ("Tech_desc", models.TextField(blank=True)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Carvarient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Varient_name", models.CharField(max_length=100)),
                ("Varient_desc", models.TextField(blank=True)),
                ("Var_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Generalinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "booking_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("Delivery_time", models.CharField(max_length=100)),
                (
                    "emi",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
    ]
