# Generated by Django 4.2.3 on 2024-03-09 19:56

import cloudinary.models
import cloudinary_storage.storage
import cloudinary_storage.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=15)),
                ("email", models.CharField(max_length=50)),
                ("phone", models.CharField(max_length=12)),
                ("model_name", models.CharField(max_length=15)),
                ("registration_number", models.CharField(max_length=20)),
                ("token", models.CharField(max_length=100)),
                ("appointment_date", models.DateField()),
                ("appointment_time", models.TimeField()),
                ("count", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Attendee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(max_length=15)),
                ("event", models.CharField(max_length=200)),
                ("registration_date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CarBooking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("var_type", models.CharField(max_length=100)),
                ("fuel", models.CharField(max_length=100)),
                ("color_n", models.CharField(max_length=100)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("model", models.CharField(max_length=100)),
                ("tot_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("fname", models.CharField(max_length=100)),
                ("lname", models.CharField(max_length=100)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.TextField()),
                (
                    "file1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "file2",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                ("paid", models.BooleanField(default=False)),
                ("orderid", models.CharField(max_length=100)),
                ("created_at", models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CarModel",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=100, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("min_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("mileage", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "coverpic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                ("name", models.CharField(max_length=20)),
                (
                    "Email",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("password", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Dealer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payment_id", models.CharField(max_length=100)),
                ("dealer_no", models.CharField(max_length=50)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("customer_email", models.EmailField(max_length=254)),
                ("car_model", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                ("Empname", models.CharField(max_length=20)),
                (
                    "Empemail",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("Emppassword", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                ("event_name", models.CharField(max_length=200)),
                ("date_time", models.DateTimeField()),
                ("event_description", models.CharField(max_length=500)),
                ("event_total_attendees", models.IntegerField(blank=True, null=True)),
                (
                    "media_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_2",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_3",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_4",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_5",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_6",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_7",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "media_8",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "video_1",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="video"
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True,
                        storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(),
                        upload_to="tests-videos/",
                        validators=[cloudinary_storage.validators.validate_video],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Generalinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "max_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "booking_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("Delivery_time", models.CharField(max_length=100)),
                (
                    "emi",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Carvarient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Varient_name", models.CharField(max_length=100)),
                ("Varient_desc", models.TextField(blank=True)),
                ("Var_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarTech",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Tech_pic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                ("Tech_name", models.CharField(max_length=100)),
                ("Tech_desc", models.TextField(blank=True)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="carinfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("car_desc", models.TextField(blank=True)),
                ("car_type", models.CharField(max_length=100)),
                (
                    "owning",
                    models.CharField(
                        choices=[
                            ("first_hand", "First Hand"),
                            ("second_hand", "Second Hand"),
                            ("limited_edition", "Limited Edition"),
                        ],
                        max_length=100,
                    ),
                ),
                ("units", models.IntegerField(blank=True, null=True)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryVid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "video_1",
                    models.FileField(
                        blank=True,
                        storage=cloudinary_storage.storage.VideoMediaCloudinaryStorage(),
                        upload_to="tests-videos/",
                        validators=[cloudinary_storage.validators.validate_video],
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryInte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Interior",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarGalleryExt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Exterior",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="carFuel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "Fuel_type",
                    models.CharField(
                        choices=[
                            ("petrol", "Petrol"),
                            ("diesel", "Diesel"),
                            ("hybrid", "Hybrid"),
                            ("electric", "Electric"),
                            ("cng", "CNG"),
                        ],
                        max_length=100,
                    ),
                ),
                ("Fuel_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CarColor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "colorpic",
                    cloudinary.models.CloudinaryField(
                        blank=True, max_length=255, null=True, verbose_name="media"
                    ),
                ),
                ("colorname", models.CharField(max_length=100)),
                (
                    "car_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="polls.carmodel"
                    ),
                ),
            ],
        ),
    ]
